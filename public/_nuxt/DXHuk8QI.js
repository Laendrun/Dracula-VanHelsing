import{r as m,o as t,c as o,a as n,t as g,e as i,n as v,f as p,g as _,F as f,h as b,i as y}from"./B3jgjKLv.js";const k={class:"my-4"},h={__name:"Card",props:{value:{type:Number,required:!0},color:{type:String,required:!0},visible:{type:Boolean,required:!1}},setup(d){const u=d,{value:r,color:c,visble:a=!1}=u;let e;switch(c){case"R":e="red";break;case"Y":e="yellow";break;case"P":e="violet";break;case"B":e="blue";break;default:e="red";break}const s=m({classes:`h2 py-2 bg-${e}-500 dark:bg-${e}-500 flex justify-center`});return(l,j)=>(t(),o("div",k,[n("div",{class:v(i(s).classes)},[n("p",null,g(i(r)),1)],2)]))}},S={class:"container mx-auto"},w={key:0,class:"grid grid-cols-12"},B={class:"col-start-2 col-span-10"},C={class:"grid grid-cols-5 gap-12"},x={key:1},N={__name:"[id]",props:{socket:{type:Object,required:!0}},setup(d){const u=d,{socket:r}=u;r||p("/");const c=_();if(!c.params.id){const e={type:"leave"};r.send(JSON.stringify(e)),p("/")}const a=m({roomId:"",ownCards:[],opponentCards:[],gameStatus:"waiting"});return a.roomId=c.params.id,r.onmessage=e=>{const s=JSON.parse(e.data);console.log(s),s.type=="game"&&(s.params.gameId&&(a.gameStatus=s.params.gameStatus),a.gameStatus=="ready"&&(a.ownCards=s.params.cards),console.log("Game status: %s",a.gameStatus))},(e,s)=>(t(),o("div",S,[i(a).gameStatus=="ready"?(t(),o("div",w,[n("div",B,[n("div",C,[(t(!0),o(f,null,b(i(a).ownCards,l=>(t(),y(h,{color:l.color,value:l.value,visible:l.shown},null,8,["color","value","visible"]))),256))])])])):(t(),o("div",x,s[0]||(s[0]=[n("p",null,"En attente de votre adversaire...",-1)])))]))}};export{N as default};
